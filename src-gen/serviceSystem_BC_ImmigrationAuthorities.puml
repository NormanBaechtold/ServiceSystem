@startuml

skinparam componentStyle uml2

package "'ImmigrationAuthorityContext' Aggregate" <<Rectangle>> {
	class ImmigrationAuthorityContext <<(A,#fffab8) Aggregate Root>> {
		ImmigrationAuthorityValueExpectation regulatoryNeeds
		ImmigrationAuthorityEngagementDesign engagementPreferences
		ImmigrationAuthorityValueExpectation invoke()
		ImmigrationAuthorityCustomerJourney provideData()
		ImmigrationAuthorityCustomerJourney informEngagementDesign()
	}
	class ImmigrationauthorityCharacteristics <<(E,DarkSeaGreen) Entity>> {
		String entryRegulations
		String entryProcedures
		ImmigrationAuthorityContext regulatoryData
		ImmigrationAuthorityContext impact()
	}
	class RegulatoryNeeds <<(E,DarkSeaGreen) Entity>> {
		String travelerData
		String distributionOfNewsandInfos
		ImmigrationAuthorityContext regulatoryNeeds
		ImmigrationAuthorityContext inform()
	}
}
package "'ImmigrationAuhtorityValueSpace' Aggregate" <<Rectangle>> {
	class SimplyGoValueProposition3 <<(E,DarkSeaGreen) Entity>> {
		String regulationsDistribution
		String seamlessTravelerDataDistribution
		String seamlessImmigration
		String populationProtection
		String publicOrder
		ImmigrationAuthorityValueExpectation valueProposition
		ImmigrationAuthorityValueExpectation proposeSolutions()
	}
	class ImmigrationAuthorityValueExpectation <<(A,#fffab8) Aggregate Root>> {
		String populationProtection
		String publicOrder
		SimplyGoValueProposition3 inspiration
		ImmigrationAuthorityEngagementDesign expectations
		SimplyGoValueProposition3 openSolutionSpace()
		ImmigrationAuthorityEngagementDesign dictate()
	}
}
package "'ImmigrationAuthorityCustomerJourney' Aggregate" <<Rectangle>> {
	class ImmigrationAuthorityEngagementDesign <<(A,#fffab8) Aggregate Root>> {
		String existingDataExchangeChannels
		String existingInformationDistributionChannels
		ImmigrationAuthorityResourceIntegration regulatoryData
		ImmigrationAuthorityResourceExchange accessPoints
		ImmigrationAuthorityResourceIntegration integrateResources()
		ImmigrationAuthorityResourceExchange enableResourceExchange()
	}
	class ImmigrationAuthorityResourceIntegration <<(E,DarkSeaGreen) Entity>> {
		String entryRegulations
		String entryProcedures
		ImmigrationAuthorityValueCocreation ownContribution
	}
	class ImmigrationAuthorityResourceExchange <<(E,DarkSeaGreen) Entity>> {
		String passengerData
		ImmigrationAuthorityValueCocreation externalContribution
	}
	class ImmigrationAuthorityValueCocreation <<(V,DarkSeaGreen) Value Object>> {
		String improvedImmigration
		String ambiguousHealthRegulation
		void valueInUse()
	}
}
ImmigrationAuthorityContext --> ImmigrationAuthorityValueExpectation : regulatoryNeeds
ImmigrationAuthorityContext --> ImmigrationAuthorityEngagementDesign : engagementPreferences
ImmigrationauthorityCharacteristics --> ImmigrationAuthorityContext : regulatoryData
RegulatoryNeeds --> ImmigrationAuthorityContext : regulatoryNeeds
SimplyGoValueProposition3 --> ImmigrationAuthorityValueExpectation : valueProposition
ImmigrationAuthorityValueExpectation --> SimplyGoValueProposition3 : inspiration
ImmigrationAuthorityValueExpectation --> ImmigrationAuthorityEngagementDesign : expectations
ImmigrationAuthorityEngagementDesign --> ImmigrationAuthorityResourceIntegration : regulatoryData
ImmigrationAuthorityEngagementDesign --> ImmigrationAuthorityResourceExchange : accessPoints
ImmigrationAuthorityResourceIntegration --> ImmigrationAuthorityValueCocreation : ownContribution
ImmigrationAuthorityResourceExchange --> ImmigrationAuthorityValueCocreation : externalContribution
legend left
  This bounded context implements the subdomain 'ImmigrationAuthoritiesDomain'.
end legend


@enduml
