@startuml

skinparam componentStyle uml2

package "'ImmigrationAuthorityContext' Aggregate" <<Rectangle>> {
	class ImmigrationAuthorityContext <<(A,#fffab8) Aggregate Root>> {
		RegulatoryNeeds regulatoryNeeds
		ImmigrationauthorityCharacteristics regulatoryData
		ImmigrationAuthorityValueExpectation invoke()
		ImmigrationAuthorityCustomerJourney provideData()
		ImmigrationAuthorityCustomerJourney informEngagementDesign()
	}
	class ImmigrationauthorityCharacteristics <<(E,DarkSeaGreen) Entity>> {
		String entryRegulations
		String entryProcedures
		ImmigrationAuthorityContext impact()
	}
	class RegulatoryNeeds <<(E,DarkSeaGreen) Entity>> {
		String travelerData
		String distributionOfNewsandInfos
		ImmigrationAuthorityContext inform()
	}
}
package "'ImmigrationAuhtorityValueSpace' Aggregate" <<Rectangle>> {
	class SimplyGoValueProposition3 <<(E,DarkSeaGreen) Entity>> {
		String regulationsDistribution
		String seamlessTravelerDataDistribution
		String seamlessImmigration
		String populationProtection
		String publicOrder
		ImmigrationAuthorityValueExpectation inspiration
		ImmigrationAuthorityValueExpectation proposeSolutions()
	}
	class ImmigrationAuthorityValueExpectation <<(A,#fffab8) Aggregate Root>> {
		String populationProtection
		String publicOrder
		SimplyGoValueProposition3 valueProposition
		ImmigrationAuthorityContext regulatoryNeeds
		SimplyGoValueProposition3 openSolutionSpace()
		ImmigrationAuthorityEngagementDesign dictate()
	}
}
package "'ImmigrationAuthorityCustomerJourney' Aggregate" <<Rectangle>> {
	class ImmigrationAuthorityServiceForServiceExchange <<(A,#fffab8) Aggregate Root>> {
		String serviceExperience
		ImmigrationAuthorityContext engagementPreferences
		ImmigrationAuthorityValueExpectation expectations
		ImmigrationAuthorityResourceIntegration regulatoryData
		ImmigrationAuthorityResourceExchange externalData
		void valueCocreation()
		void resourceIntegration()
		void resourceConsumption()
	}
	class ImmigrationAuthorityResourceIntegration <<(V,DarkSeaGreen) Value Object>> {
		String entryRegulations
		String entryProcedures
		ImmigrationAuthorityEngagementDesign customerJourney
		void provideRegulatoryData()
	}
	class ImmigrationAuthorityEngagementDesign <<(E,DarkSeaGreen) Entity>> {
		String existingDataExchangeChannels
		String existingInformationDistributionChannels
		ImmigrationAuthorityResourceIntegration integrateResources()
		ImmigrationAuthorityResourceExchange enableResourceExchange()
	}
	class ImmigrationAuthorityResourceExchange <<(E,DarkSeaGreen) Entity>> {
		String passengerData
		ImmigrationAuthorityEngagementDesign externalResourceAccess
		void integrateExternalResources()
	}
}
ImmigrationAuthorityContext --> RegulatoryNeeds : regulatoryNeeds
ImmigrationAuthorityContext --> ImmigrationauthorityCharacteristics : regulatoryData
SimplyGoValueProposition3 --> ImmigrationAuthorityValueExpectation : inspiration
ImmigrationAuthorityValueExpectation --> SimplyGoValueProposition3 : valueProposition
ImmigrationAuthorityValueExpectation --> ImmigrationAuthorityContext : regulatoryNeeds
ImmigrationAuthorityServiceForServiceExchange --> ImmigrationAuthorityContext : engagementPreferences
ImmigrationAuthorityServiceForServiceExchange --> ImmigrationAuthorityValueExpectation : expectations
ImmigrationAuthorityServiceForServiceExchange --> ImmigrationAuthorityResourceIntegration : regulatoryData
ImmigrationAuthorityServiceForServiceExchange --> ImmigrationAuthorityResourceExchange : externalData
ImmigrationAuthorityResourceIntegration --> ImmigrationAuthorityEngagementDesign : customerJourney
ImmigrationAuthorityResourceExchange --> ImmigrationAuthorityEngagementDesign : externalResourceAccess
legend left
  This bounded context implements the subdomain 'ImmigrationAuthoritiesDomain'.
end legend


@enduml
