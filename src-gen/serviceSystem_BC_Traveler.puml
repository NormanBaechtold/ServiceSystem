@startuml

skinparam componentStyle uml2

package "'TravelerCustomerJourney' Aggregate" <<Rectangle>> {
	class TravelerServiceforServiceExchange <<(A,#fffab8) Aggregate Root>> {
		String serviceExperience
		TravelerContext engagementPreferences
		TravelerValueExpectation expectations
		TravelerResourceIntegration travelerData
		TravelerResourceExchange externalData
		void personalResourceIntegration()
		void externalResourceConsumption()
		void valueCocreation()
	}
	class TravelerResourceIntegration <<(V,DarkSeaGreen) Value Object>> {
		String personalData
		String healthData
		String tripData
		TravelerEngagementDesign customerJourney
		void provideTravelerData()
	}
	class TravelerEngagementDesign <<(E,DarkSeaGreen) Entity>> {
		String mobileApp
		String browser
		String onlineBookingPattern
		TravelerResourceIntegration integrateResources()
		TravelerResourceExchange enableResourceExchange()
	}
	class TravelerResourceExchange <<(E,DarkSeaGreen) Entity>> {
		String entryRegulations
		String healthCare
		String services
		TravelerEngagementDesign externalResourceAccess
		void integrateExternalResources()
	}
}
package "'TravelerContext' Aggregate" <<Rectangle>> {
	class TravelerContext <<(A,#fffab8) Aggregate Root>> {
		TargetSegments segmentSpecifications
		IndividualCharacteristics individualData
		TravelerValueExpectation invoke()
		TravelerCustomerJourney provideData()
		TravelerCustomerJourney informEngagementDesign()
	}
	class TargetSegments <<(E,DarkSeaGreen) Entity>> {
		String painsAndGains
		String serviceRequirements
		String demographics
		String typicalBehaviors
		TravelerContext frame()
	}
	class IndividualCharacteristics <<(E,DarkSeaGreen) Entity>> {
		String personalData
		String healthData
		String tripData
		TravelerContext provideData()
	}
}
package "'ValueSpaceTraveler' Aggregate" <<Rectangle>> {
	class SimplyGoValueProposition2 <<(V,DarkSeaGreen) Value Object>> {
		String healthCare
		String travel
		String immigration
		TravelerValueExpectation inspiration
		TravelerValueExpectation proposeSolutions()
	}
	class TravelerValueExpectation <<(A,#fffab8) Aggregate Root>> {
		String healthServices
		String freeTravel
		String serviceConsume
		TravelerContext personalNeeds
		SimplyGoValueProposition2 valueProposition
		SimplyGoValueProposition2 openSolutionSpace()
		ServiceProviderEngagementDesign dictate()
	}
}
TravelerServiceforServiceExchange --> TravelerContext : engagementPreferences
TravelerServiceforServiceExchange --> TravelerValueExpectation : expectations
TravelerServiceforServiceExchange --> TravelerResourceIntegration : travelerData
TravelerServiceforServiceExchange --> TravelerResourceExchange : externalData
TravelerResourceIntegration --> TravelerEngagementDesign : customerJourney
TravelerResourceExchange --> TravelerEngagementDesign : externalResourceAccess
TravelerContext --> TargetSegments : segmentSpecifications
TravelerContext --> IndividualCharacteristics : individualData
SimplyGoValueProposition2 --> TravelerValueExpectation : inspiration
TravelerValueExpectation --> TravelerContext : personalNeeds
TravelerValueExpectation --> SimplyGoValueProposition2 : valueProposition
legend left
  This bounded context implements the subdomain 'TravelerDomain'.
end legend


@enduml
