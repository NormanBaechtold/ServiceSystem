@startuml

skinparam componentStyle uml2

package "'TravelerContext' Aggregate" <<Rectangle>> {
	class TravelerContext <<(A,#fffab8) Aggregate Root>> {
		TravelerValueExpectation personalNeeds
		TravelerEngagementDesign engagementPreferences
		TravelerValueExpectation invoke()
		TravelerCustomerJourney provideData()
		TravelerCustomerJourney informEngagementDesign()
	}
	class TargetSegments <<(E,DarkSeaGreen) Entity>> {
		String painsAndGains
		String serviceRequirements
		String demographics
		String typicalBehaviors
		TravelerContext segmentSpecifications
		TravelerContext frame()
	}
	class IndividualCharacteristics <<(E,DarkSeaGreen) Entity>> {
		String personalData
		String healthData
		String tripData
		TravelerContext individualData
		TravelerContext provideData()
	}
}
package "'ValueSpaceTraveler' Aggregate" <<Rectangle>> {
	class SimplyGoValueProposition2 <<(E,DarkSeaGreen) Entity>> {
		String healthCare
		String travel
		String immigration
		TravelerValueExpectation valueProposition
		TravelerValueExpectation proposeSolutions()
	}
	class TravelerValueExpectation <<(E,DarkSeaGreen) Entity>> {
		String healthServices
		String freeTravel
		String serviceConsume
		TravelerEngagementDesign expectations
		SimplyGoValueProposition2 inspiration
		SimplyGoValueProposition2 openSolutionSpace()
		ServiceProviderEngagementDesign dictate()
	}
}
package "'TravelerCustomerJourney' Aggregate" <<Rectangle>> {
	class TravelerEngagementDesign <<(A,#fffab8) Aggregate Root>> {
		String mobileApp
		String browser
		String onlineBookingPattern
		TravelerResourceIntegration businessData
		TravelerResourceExchange accessPoints
		TravelerResourceIntegration integrateResources()
		TravelerResourceExchange enableResourceExchange()
	}
	class TravelerResourceIntegration <<(E,DarkSeaGreen) Entity>> {
		String personalData
		String healthData
		String tripData
		TravelerValueCocreation ownContribution
	}
	class TravelerResourceExchange <<(E,DarkSeaGreen) Entity>> {
		String entryRegulations
		String healthCareAccess
		String serviceProvision
		TravelerValueCocreation externalContribution
	}
	class TravelerValueCocreation <<(V,DarkSeaGreen) Value Object>> {
		String personalizedTravelInformation
		String improvedTravelConditions
		void valueInUse()
	}
}
TravelerContext --> TravelerValueExpectation : personalNeeds
TravelerContext --> TravelerEngagementDesign : engagementPreferences
TargetSegments --> TravelerContext : segmentSpecifications
IndividualCharacteristics --> TravelerContext : individualData
SimplyGoValueProposition2 --> TravelerValueExpectation : valueProposition
TravelerValueExpectation --> TravelerEngagementDesign : expectations
TravelerValueExpectation --> SimplyGoValueProposition2 : inspiration
TravelerEngagementDesign --> TravelerResourceIntegration : businessData
TravelerEngagementDesign --> TravelerResourceExchange : accessPoints
TravelerResourceIntegration --> TravelerValueCocreation : ownContribution
TravelerResourceExchange --> TravelerValueCocreation : externalContribution
legend left
  This bounded context implements the subdomain 'TravelerDomain'.
end legend


@enduml
