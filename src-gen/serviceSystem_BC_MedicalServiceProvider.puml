@startuml

skinparam componentStyle uml2

package "'MedicalServiceProviderContext' Aggregate" <<Rectangle>> {
	class MedicalServiceProviderContext <<(A,#fffab8) Aggregate Root>> {
		MedicalServiceProviderValueExpectation organizationalNeeds
		MedicalServiceProviderEngagementDesign engagementPreferences
		MedicalServiceProviderValueExpectation invoke()
		MedicalServiceProviderCustomerJourney provideData()
		MedicalServiceProviderCustomerJourney informEngagementDesign()
	}
	class MedicalServiceProviderChracteristics <<(E,DarkSeaGreen) Entity>> {
		String testCenterLocation
		String testResults
		String patienVaccinationStatus
		MedicalServiceProviderContext institutionalData
		MedicalServiceProviderContext inform()
	}
	class OrganizationalNeeds <<(E,DarkSeaGreen) Entity>> {
		String patientPersonalData
		String patientHealthData
		String patientDataDistribution
		MedicalServiceProviderContext patientData
		MedicalServiceProviderContext inform()
	}
}
package "'MedicalServiceProviderValueSpace' Aggregate" <<Rectangle>> {
	class SimplyGoValueProposition4 <<(E,DarkSeaGreen) Entity>> {
		String travelerPersonalData
		String travelerHealthData
		MedicalServiceProviderValueExpectation valueProposition
		MedicalServiceProviderValueExpectation proposeSolutions()
	}
	class MedicalServiceProviderValueExpectation <<(A,#fffab8) Aggregate Root>> {
		String globalDataDistribution
		String multilingualAccess
		String operationEfficiency
		SimplyGoValueProposition4 inspiration
		MedicalServiceProviderEngagementDesign expectations
		SimplyGoValueProposition4 openSolutionSpace()
		MedicalServiceProviderEngagementDesign dictate()
	}
}
package "'MedicalServiceProviderCustomerJourney' Aggregate" <<Rectangle>> {
	class MedicalServiceProviderEngagementDesign <<(A,#fffab8) Aggregate Root>> {
		String existingTestProcedures
		String existingDataDistributionPatterns
		MedicalServiceProviderResourceIntegration regulatoryData
		MedicalServiceProviderResourceExchange accessPoints
		MedicalServiceProviderResourceIntegration integrateResources()
		MedicalServiceProviderResourceExchange enableResourceExchange()
	}
	class MedicalServiceProviderResourceIntegration <<(E,DarkSeaGreen) Entity>> {
		String locationData
		String patientPersonalData
		String patientHealthData
		String patientTestResults
		MedicalServiceProviderValueCocreation ownContribution
	}
	class MedicalServiceProviderResourceExchange <<(E,DarkSeaGreen) Entity>> {
		String patientPersonalData
		String regulatoryData
		MedicalServiceProviderValueCocreation externalContribution
	}
	class MedicalServiceProviderValueCocreation <<(V,DarkSeaGreen) Value Object>> {
		String seamlessDataExchange
		String improvedEfficiency
		String improvedEffectiveness
		void valueInUse()
	}
}
MedicalServiceProviderContext --> MedicalServiceProviderValueExpectation : organizationalNeeds
MedicalServiceProviderContext --> MedicalServiceProviderEngagementDesign : engagementPreferences
MedicalServiceProviderChracteristics --> MedicalServiceProviderContext : institutionalData
OrganizationalNeeds --> MedicalServiceProviderContext : patientData
SimplyGoValueProposition4 --> MedicalServiceProviderValueExpectation : valueProposition
MedicalServiceProviderValueExpectation --> SimplyGoValueProposition4 : inspiration
MedicalServiceProviderValueExpectation --> MedicalServiceProviderEngagementDesign : expectations
MedicalServiceProviderEngagementDesign --> MedicalServiceProviderResourceIntegration : regulatoryData
MedicalServiceProviderEngagementDesign --> MedicalServiceProviderResourceExchange : accessPoints
MedicalServiceProviderResourceIntegration --> MedicalServiceProviderValueCocreation : ownContribution
MedicalServiceProviderResourceExchange --> MedicalServiceProviderValueCocreation : externalContribution
legend left
  This bounded context implements the subdomain 'MedicalServiceProviderDomain'.
end legend


@enduml
