@startuml

skinparam componentStyle uml2

package "'ImmigrationAuthorityCustomerJourney' Aggregate" <<Rectangle>> {
	class ImmigrationAuthorityServiceForServiceExchange <<(A,#fffab8) Aggregate Root>> {
		String serviceExperience
		ImmigrationAuthorityContext engagementPreferences
		ImmigrationAuthorityValueExpectation expectations
		ImmigrationAuthorityResourceIntegration regulatoryData
		ImmigrationAuthorityResourceExchange externalData
		void valueCocreation()
		void resourceIntegration()
		void resourceConsumption()
	}
	class ImmigrationAuthorityResourceIntegration <<(V,DarkSeaGreen) Value Object>> {
		String entryRegulations
		String entryProcedures
		ImmigrationAuthorityEngagementDesign customerJourney
		void provideRegulatoryData()
	}
	class ImmigrationAuthorityEngagementDesign <<(E,DarkSeaGreen) Entity>> {
		String existingDataExchangeChannels
		String existingInformationDistributionChannels
		ImmigrationAuthorityResourceIntegration integrateResources()
		ImmigrationAuthorityResourceExchange enableResourceExchange()
	}
	class ImmigrationAuthorityResourceExchange <<(E,DarkSeaGreen) Entity>> {
		String passengerData
		ImmigrationAuthorityEngagementDesign externalResourceAccess
		void integrateExternalResources()
	}
}
ImmigrationAuthorityServiceForServiceExchange --> ImmigrationAuthorityResourceIntegration : regulatoryData
ImmigrationAuthorityServiceForServiceExchange --> ImmigrationAuthorityResourceExchange : externalData
ImmigrationAuthorityResourceIntegration --> ImmigrationAuthorityEngagementDesign : customerJourney
ImmigrationAuthorityResourceExchange --> ImmigrationAuthorityEngagementDesign : externalResourceAccess


@enduml
